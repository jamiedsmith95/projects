󰘫  |1: {
  always_trigger = false,
  bind = true,
  bufnr = 0,
  check_completion_visible = true,
  close_timeout = 4000,
  cursorhold_update = true,
  debug = true,
  doc_lines = 5,
  extra_trigger_chars = {},
  fix_pos = true,
  floating_window = true,
  floating_window_above_cur_line = false,
  floating_window_off_x = 1,
  floating_window_off_y = <function 1>,
  handler_opts = {
    border = "rounded"
  },
  hi_parameter = "MoreMsg",
  hint_enable = true,
  hint_inline = <function 2>,
  hint_prefix = "  ",
  hint_scheme = "Comment",
  log_path = "debug_log_file_path",
  mainwin = 0,
  max_height = 50,
  max_width = 200,
  padding = "",
  shadow_blend = 36,
  shadow_guibg = "Black",
  timer_interval = 100,
  use_lspsaga = false,
  verbose = false,
  wrap = true,
  zindex = 200
}

󰘫  |1: {
  always_trigger = false,
  bind = true,
  bufnr = 0,
  check_completion_visible = true,
  close_timeout = 4000,
  cursorhold_update = true,
  debug = true,
  doc_lines = 5,
  extra_trigger_chars = {},
  fix_pos = true,
  floating_window = true,
  floating_window_above_cur_line = false,
  floating_window_off_x = 1,
  floating_window_off_y = <function 1>,
  handler_opts = {
    border = "rounded"
  },
  hi_parameter = "MoreMsg",
  hint_enable = true,
  hint_inline = <function 2>,
  hint_prefix = "  ",
  hint_scheme = "Comment",
  log_path = "debug_log_file_path",
  mainwin = 0,
  max_height = 50,
  max_width = 200,
  padding = "",
  shadow_blend = 36,
  shadow_guibg = "Black",
  timer_interval = 100,
  use_lspsaga = false,
  verbose = false,
  wrap = true,
  zindex = 200
}

󰘫  |1: {
  always_trigger = false,
  bind = true,
  bufnr = 0,
  check_completion_visible = true,
  close_timeout = 4000,
  cursorhold_update = true,
  debug = true,
  doc_lines = 5,
  extra_trigger_chars = {},
  fix_pos = true,
  floating_window = true,
  floating_window_above_cur_line = false,
  floating_window_off_x = 1,
  floating_window_off_y = <function 1>,
  handler_opts = {
    border = "rounded"
  },
  hi_parameter = "MoreMsg",
  hint_enable = true,
  hint_inline = <function 2>,
  hint_prefix = "  ",
  hint_scheme = "Comment",
  log_path = "debug_log_file_path",
  mainwin = 0,
  max_height = 50,
  max_width = 200,
  padding = "",
  shadow_blend = 36,
  shadow_guibg = "Black",
  timer_interval = 100,
  use_lspsaga = false,
  verbose = false,
  wrap = true,
  zindex = 200
}

󰘫  |1: hover not supported
󰘫  |1: lsp cap:  |2: false |3: false
󰘫  |1: skip: signature capabilities not enabled
󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: {
  always_trigger = false,
  bind = true,
  bufnr = 0,
  check_completion_visible = true,
  close_timeout = 4000,
  cursorhold_update = true,
  debug = true,
  doc_lines = 5,
  extra_trigger_chars = {},
  fix_pos = true,
  floating_window = true,
  floating_window_above_cur_line = false,
  floating_window_off_x = 1,
  floating_window_off_y = <function 1>,
  handler_opts = {
    border = "rounded"
  },
  hi_parameter = "MoreMsg",
  hint_enable = true,
  hint_inline = <function 2>,
  hint_prefix = "  ",
  hint_scheme = "Comment",
  log_path = "debug_log_file_path",
  mainwin = 0,
  max_height = 50,
  max_width = 200,
  padding = "",
  shadow_blend = 36,
  shadow_guibg = "Black",
  timer_interval = 100,
  use_lspsaga = false,
  verbose = false,
  wrap = true,
  zindex = 200
}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: 
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 0
󰘫  |1: delta |2:  |3: 
󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 4
󰘫  |1: delta |2:      |3:      |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 5
󰘫  |1: delta |2:  < |3:     < |4:      |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 5
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 5
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 4
󰘫  |1: delta |2:  < |3:      |4:     < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:   
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 2
󰘫  |1: delta |2:     |3:    |4:      |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: 
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 0
󰘫  |1: delta |2:    |3:  |4:    |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: 
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 0
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: 
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 0
󰘫  |1: delta |2:  |3:  |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <div class="con
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2:     <div class="con |3:     <div class="con |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 4
󰘫  |1: delta |2:      |3:      |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 5
󰘫  |1: delta |2:  < |3:     < |4:      |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <h
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 6
󰘫  |1: delta |2: <h |3:     <h |4:     < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <he
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 7
󰘫  |1: delta |2: he |3:     <he |4:     <h |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: eader |3:     <header |4:     <he |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: r  |3:     <header  |4:     <header |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2:  c |3:     <header c |4:     <header  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header cl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2: cl |3:     <header cl |4:     <header c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header cla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: la |3:     <header cla |4:     <header cl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header clas
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2: as |3:     <header clas |4:     <header cla |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: ss |3:     <header class |4:     <header clas |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header <class>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2: ss> |3:     <header <class> |4:     <header class |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header <class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2: s> |3:     <header <class |4:     <header <class> |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header <clas
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: ss |3:     <header <clas |4:     <header <class |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header <cla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2: as |3:     <header <cla |4:     <header <clas |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header <cl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: la |3:     <header <cl |4:     <header <cla |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header <c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2: cl |3:     <header <c |4:     <header <cl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2: <c |3:     <header < |4:     <header <c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header < 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2: <  |3:     <header <  |4:     <header < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2: <  |3:     <header < |4:     <header <  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2:  < |3:     <header  |4:     <header < |5: {}

󰘫  |1: mode:    |2: niI
󰘫  |1: mode:  niI  |2: niI
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2:     <header  |3:     <header  |4:  |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2:     <header  |3:     <header  |4:     <header  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2:  c |3:     <header c |4:     <header  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 5
󰘫  |1: delta |2: <header c |3:     < |4:     <header c |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header cl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2: <header cl |3:     <header cl |4:     < |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header cla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: la |3:     <header cla |4:     <header cl |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header cla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 5
󰘫  |1: delta |2: <header cla |3:     < |4:     <header cla |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header clas
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2: <header clas |3:     <header clas |4:     < |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: ss |3:     <header class |4:     <header clas |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2: s= |3:     <header class= |4:     <header class |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2: =" |3:     <header class=" |4:     <header class= |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 5
󰘫  |1: delta |2: <header class=" |3:     < |4:     <header class=" |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="s
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2: <header class="s |3:     <header class="s |4:     < |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 5
󰘫  |1: delta |2: <header class="s |3:     < |4:     <header class="s |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="sit
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 22
󰘫  |1: delta |2: <header class="sit |3:     <header class="sit |4:     < |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: te |3:     <header class="site |4:     <header class="sit |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: delta |2: e- |3:     <header class="site- |4:     <header class="site |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site-h
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: delta |2: -h |3:     <header class="site-h |4:     <header class="site- |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site-h
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site-he
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 26
󰘫  |1: delta |2: he |3:     <header class="site-he |4:     <header class="site-h |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site-he
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 26
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site-hea
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 27
󰘫  |1: delta |2: ea |3:     <header class="site-hea |4:     <header class="site-he |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site-hea
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 27
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site-head
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2: ad |3:     <header class="site-head |4:     <header class="site-hea |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site-head
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site-heade
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 29
󰘫  |1: delta |2: de |3:     <header class="site-heade |4:     <header class="site-head |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site-heade
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 29
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site-header
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: delta |2: er |3:     <header class="site-header |4:     <header class="site-heade |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site-header
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: delta |2:     <header class="site-header |3:     <header class="site-header |4:     <header class="site-header |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site-header"
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: r" |3:     <header class="site-header" |4:     <header class="site-header |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site-header">
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2: "> |3:     <header class="site-header"> |4:     <header class="site-header" |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <header class="site-header">
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 6
󰘫  |1: delta |2: header class="site-header"> |3:        |4:     <header class="site-header"> |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 6
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 7
󰘫  |1: delta |2:  < |3:       < |4:        |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 7
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 8
󰘫  |1: delta |2: <n |3:       <n |4:       < |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 8
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 9
󰘫  |1: delta |2: na |3:       <na |4:       <n |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 9
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2: av |3:       <nav |4:       <na |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2:       <nav |3:       <nav |4:       <nav |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2:       <nav |3:       <nav |4:       <nav |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: v  |3:       <nav  |4:       <nav |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2:  c |3:       <nav c |4:       <nav  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav cl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2: cl |3:       <nav cl |4:       <nav c |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav cla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2: la |3:       <nav cla |4:       <nav cl |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav cla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav clas
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: as |3:       <nav clas |4:       <nav cla |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav clas
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2: ss |3:       <nav class |4:       <nav clas |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: s= |3:       <nav class= |4:       <nav class |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2: =" |3:       <nav class=" |4:       <nav class= |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2: "n |3:       <nav class="n |4:       <nav class=" |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2: na |3:       <nav class="na |4:       <nav class="n |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 21
󰘫  |1: delta |2: av |3:       <nav class="nav |4:       <nav class="na |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 21
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navb
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 22
󰘫  |1: delta |2: vb |3:       <nav class="navb |4:       <nav class="nav |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navb
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 22
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navba
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: ba |3:       <nav class="navba |4:       <nav class="navb |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navba
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: delta |2: ar |3:       <nav class="navbar |4:       <nav class="navba |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: delta |2: r  |3:       <nav class="navbar  |4:       <nav class="navbar |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 26
󰘫  |1: delta |2:  n |3:       <nav class="navbar n |4:       <nav class="navbar  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 26
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 27
󰘫  |1: delta |2: na |3:       <nav class="navbar na |4:       <nav class="navbar n |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 27
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2: av |3:       <nav class="navbar nav |4:       <nav class="navbar na |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navb
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 29
󰘫  |1: delta |2: vb |3:       <nav class="navbar navb |4:       <nav class="navbar nav |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navb
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 29
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navba
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: delta |2: ba |3:       <nav class="navbar navba |4:       <nav class="navbar navb |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navba
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navba-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: a- |3:       <nav class="navbar navba- |4:       <nav class="navbar navba |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navba-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navba-e
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2: -e |3:       <nav class="navbar navba-e |4:       <nav class="navbar navba- |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navba-e
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navba-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: -e |3:       <nav class="navbar navba- |4:       <nav class="navbar navba-e |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navba-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navba
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: delta |2: a- |3:       <nav class="navbar navba |4:       <nav class="navbar navba- |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navba
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: ar |3:       <nav class="navbar navbar |4:       <nav class="navbar navba |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2: r- |3:       <nav class="navbar navbar- |4:       <nav class="navbar navbar |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 33
󰘫  |1: delta |2: -a |3:       <nav class="navbar navbar-a |4:       <nav class="navbar navbar- |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 33
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2: -a |3:       <nav class="navbar navbar- |4:       <nav class="navbar navbar-a |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-e
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 33
󰘫  |1: delta |2: -e |3:       <nav class="navbar navbar-e |4:       <nav class="navbar navbar- |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-e
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 33
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-ex
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 34
󰘫  |1: delta |2: ex |3:       <nav class="navbar navbar-ex |4:       <nav class="navbar navbar-e |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-ex
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 34
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-exp
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 35
󰘫  |1: delta |2: xp |3:       <nav class="navbar navbar-exp |4:       <nav class="navbar navbar-ex |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-exp
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 35
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expa
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 36
󰘫  |1: delta |2: pa |3:       <nav class="navbar navbar-expa |4:       <nav class="navbar navbar-exp |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expa
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 36
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expan
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 37
󰘫  |1: delta |2: an |3:       <nav class="navbar navbar-expan |4:       <nav class="navbar navbar-expa |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expan
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 37
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 38
󰘫  |1: delta |2: nd |3:       <nav class="navbar navbar-expand |4:       <nav class="navbar navbar-expan |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 38
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 39
󰘫  |1: delta |2: d- |3:       <nav class="navbar navbar-expand- |4:       <nav class="navbar navbar-expand |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 39
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 40
󰘫  |1: delta |2: -n |3:       <nav class="navbar navbar-expand-n |4:       <nav class="navbar navbar-expand- |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 40
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 39
󰘫  |1: delta |2: -n |3:       <nav class="navbar navbar-expand- |4:       <nav class="navbar navbar-expand-n |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 39
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-m
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 40
󰘫  |1: delta |2: -m |3:       <nav class="navbar navbar-expand-m |4:       <nav class="navbar navbar-expand- |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-m
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 40
󰘫  |1: delta |2:       <nav class="navbar navbar-expand-m |3:       <nav class="navbar navbar-expand-m |4:       <nav class="navbar navbar-expand-m |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 41
󰘫  |1: delta |2: md |3:       <nav class="navbar navbar-expand-md |4:       <nav class="navbar navbar-expand-m |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 41
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 7
󰘫  |1: delta |2: <nav class="navbar navbar-expand-md |3:       < |4:       <nav class="navbar navbar-expand-md |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 42
󰘫  |1: delta |2: <nav class="navbar navbar-expand-md  |3:       <nav class="navbar navbar-expand-md  |4:       < |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 43
󰘫  |1: delta |2:  n |3:       <nav class="navbar navbar-expand-md n |4:       <nav class="navbar navbar-expand-md  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 43
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 44
󰘫  |1: delta |2: na |3:       <nav class="navbar navbar-expand-md na |4:       <nav class="navbar navbar-expand-md n |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 44
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 45
󰘫  |1: delta |2: av |3:       <nav class="navbar navbar-expand-md nav |4:       <nav class="navbar navbar-expand-md na |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 45
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navb
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 46
󰘫  |1: delta |2: vb |3:       <nav class="navbar navbar-expand-md navb |4:       <nav class="navbar navbar-expand-md nav |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navb
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 46
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 7
󰘫  |1: delta |2: <nav class="navbar navbar-expand-md navb |3:       < |4:       <nav class="navbar navbar-expand-md navb |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navba
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 47
󰘫  |1: delta |2: <nav class="navbar navbar-expand-md navba |3:       <nav class="navbar navbar-expand-md navba |4:       < |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 48
󰘫  |1: delta |2: ar |3:       <nav class="navbar navbar-expand-md navbar |4:       <nav class="navbar navbar-expand-md navba |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 48
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 49
󰘫  |1: delta |2: r- |3:       <nav class="navbar navbar-expand-md navbar- |4:       <nav class="navbar navbar-expand-md navbar |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 49
󰘫  |1: delta |2:       <nav class="navbar navbar-expand-md navbar- |3:       <nav class="navbar navbar-expand-md navbar- |4:       <nav class="navbar navbar-expand-md navbar- |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-d
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 50
󰘫  |1: delta |2: -d |3:       <nav class="navbar navbar-expand-md navbar-d |4:       <nav class="navbar navbar-expand-md navbar- |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-d
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 50
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-da
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 51
󰘫  |1: delta |2: da |3:       <nav class="navbar navbar-expand-md navbar-da |4:       <nav class="navbar navbar-expand-md navbar-d |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-da
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 51
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 52
󰘫  |1: delta |2: ar |3:       <nav class="navbar navbar-expand-md navbar-dar |4:       <nav class="navbar navbar-expand-md navbar-da |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 52
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 53
󰘫  |1: delta |2: rk |3:       <nav class="navbar navbar-expand-md navbar-dark |4:       <nav class="navbar navbar-expand-md navbar-dar |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 53
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 54
󰘫  |1: delta |2: k  |3:       <nav class="navbar navbar-expand-md navbar-dark  |4:       <nav class="navbar navbar-expand-md navbar-dark |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 54
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark b
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 55
󰘫  |1: delta |2:  b |3:       <nav class="navbar navbar-expand-md navbar-dark b |4:       <nav class="navbar navbar-expand-md navbar-dark  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark b
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 55
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 56
󰘫  |1: delta |2: bg |3:       <nav class="navbar navbar-expand-md navbar-dark bg |4:       <nav class="navbar navbar-expand-md navbar-dark b |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 56
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 57
󰘫  |1: delta |2: g- |3:       <nav class="navbar navbar-expand-md navbar-dark bg- |4:       <nav class="navbar navbar-expand-md navbar-dark bg |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 57
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-s
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 58
󰘫  |1: delta |2: -s |3:       <nav class="navbar navbar-expand-md navbar-dark bg-s |4:       <nav class="navbar navbar-expand-md navbar-dark bg- |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-s
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 58
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-st
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 59
󰘫  |1: delta |2: st |3:       <nav class="navbar navbar-expand-md navbar-dark bg-st |4:       <nav class="navbar navbar-expand-md navbar-dark bg-s |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-st
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 59
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-ste
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 60
󰘫  |1: delta |2: te |3:       <nav class="navbar navbar-expand-md navbar-dark bg-ste |4:       <nav class="navbar navbar-expand-md navbar-dark bg-st |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-ste
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 60
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-stee
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 61
󰘫  |1: delta |2: ee |3:       <nav class="navbar navbar-expand-md navbar-dark bg-stee |4:       <nav class="navbar navbar-expand-md navbar-dark bg-ste |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-stee
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 61
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 62
󰘫  |1: delta |2: el |3:       <nav class="navbar navbar-expand-md navbar-dark bg-steel |4:       <nav class="navbar navbar-expand-md navbar-dark bg-stee |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 62
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 63
󰘫  |1: delta |2: l  |3:       <nav class="navbar navbar-expand-md navbar-dark bg-steel  |4:       <nav class="navbar navbar-expand-md navbar-dark bg-steel |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 63
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel f
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 64
󰘫  |1: delta |2:  f |3:       <nav class="navbar navbar-expand-md navbar-dark bg-steel f |4:       <nav class="navbar navbar-expand-md navbar-dark bg-steel  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel f
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 64
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 7
󰘫  |1: delta |2: <nav class="navbar navbar-expand-md navbar-dark bg-steel f |3:       < |4:       <nav class="navbar navbar-expand-md navbar-dark bg-steel f |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fix
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 66
󰘫  |1: delta |2: <nav class="navbar navbar-expand-md navbar-dark bg-steel fix |3:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fix |4:       < |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixe
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 67
󰘫  |1: delta |2: xe |3:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixe |4:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fix |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixe
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 67
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 68
󰘫  |1: delta |2: ed |3:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed |4:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixe |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 68
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 69
󰘫  |1: delta |2: d- |3:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed- |4:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 69
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-t
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 70
󰘫  |1: delta |2: -t |3:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-t |4:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed- |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-t
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 70
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-to
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 71
󰘫  |1: delta |2: to |3:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-to |4:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-t |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-to
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 71
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 72
󰘫  |1: delta |2: op |3:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top |4:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-to |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 72
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top"
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 73
󰘫  |1: delta |2: p" |3:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top" |4:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top"
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 73
󰘫  |1: delta |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top" |3:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top" |4:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top" |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top"<
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 74
󰘫  |1: delta |2: "< |3:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top"< |4:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top" |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top"<
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 74
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top"
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 73
󰘫  |1: delta |2: "< |3:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top" |4:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top"< |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top"
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 73
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top">
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 74
󰘫  |1: delta |2: "> |3:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top"> |4:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top" |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top">
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 74
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 8
󰘫  |1: delta |2: nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top"> |3:          |4:       <nav class="navbar navbar-expand-md navbar-dark bg-steel fixed-top"> |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 8
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 9
󰘫  |1: delta |2:  < |3:         < |4:          |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 9
󰘫  |1: delta |2:         < |3:         < |4:         < |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <d
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2: <d |3:         <d |4:         < |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <d
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: div |3:         <div |4:         <d |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2:         <div |3:         <div |4:         <div |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2:         <div |3:         <div |4:         <div |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 9
󰘫  |1: delta |2: <div |3:         < |4:         <div |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: <div |3:         <div |4:         < |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2: v> |3:         <div> |4:         <div |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2: >  |3:         <div>  |4:         <div> |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2:  c |3:         <div> c |4:         <div>  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> cl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2: cl |3:         <div> cl |4:         <div> c |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> cl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> cla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: la |3:         <div> cla |4:         <div> cl |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> cla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> clas
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2: as |3:         <div> clas |4:         <div> cla |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> clas
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2: ss |3:         <div> class |4:         <div> clas |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2: s= |3:         <div> class= |4:         <div> class |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 21
󰘫  |1: delta |2: =" |3:         <div> class=" |4:         <div> class= |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 21
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 22
󰘫  |1: delta |2: "c |3:         <div> class="c |4:         <div> class=" |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 22
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="co
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: co |3:         <div> class="co |4:         <div> class="c |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="co
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="con
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: delta |2: on |3:         <div> class="con |4:         <div> class="co |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="con
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="cont
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: delta |2: nt |3:         <div> class="cont |4:         <div> class="con |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="cont
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="conta
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 26
󰘫  |1: delta |2: ta |3:         <div> class="conta |4:         <div> class="cont |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="conta
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 26
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="contain
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2: ain |3:         <div> class="contain |4:         <div> class="conta |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="contain
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2:         <div> class="contain |3:         <div> class="contain |4:         <div> class="contain |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="containe
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 29
󰘫  |1: delta |2: ne |3:         <div> class="containe |4:         <div> class="contain |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="containe
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 29
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="container
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: delta |2: er |3:         <div> class="container |4:         <div> class="containe |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="container
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="container"
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: r" |3:         <div> class="container" |4:         <div> class="container |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="container">
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2: "> |3:         <div> class="container"> |4:         <div> class="container" |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="container">
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2:         <div> class="container"> |3:         <div> class="container"> |4:         <div> class="container"> |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2: div> class="container"> |3:            |4:         <div> class="container"> |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2:  < |3:           < |4:            |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: <a |3:           <a |4:           < |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2:           <a |3:           <a |4:           <a |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2:           <a |3:           <a |4:           <a |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <a |3:           < |4:           <a |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: <a |3:           <a |4:           < |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2:           <a |3:           <a |4:           <a |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2: a  |3:           <a  |4:           <a |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: a  |3:           <a |4:           <a  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<a href="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2: <a href=" |3:           <<a href=" |4:           <a |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<a href="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	[string ":lua"]:1: in main chunk
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<a href=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2:           <<a href= |3:           <<a href= |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2:            |3:            |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2:  < |3:           < |4:            |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: <a |3:           <a |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <a |3:           < |4:           <a |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: <a |3:           <a |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <a |3:           < |4:           <a |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <abbr
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: <abbr |3:           <abbr |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <abb
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2: br |3:           <abb |4:           <abbr |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <ab
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2: bb |3:           <ab |4:           <abb |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: ab |3:           <a |4:           <ab |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <a |3:           < |4:           <a |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: <a |3:           <a |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <a |3:           < |4:           <a |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           < 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: <  |3:           <  |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           < a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2:  a |3:           < a |4:           <  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           < 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2:  a |3:           <  |4:           < a |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <  |3:           < |4:           <  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: <a |3:           <a |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2: a  |3:           <a  |4:           <a |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: a  |3:           <a |4:           <a  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<a href="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2: <a href=" |3:           <<a href=" |4:           <a |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<a href="D
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 21
󰘫  |1: delta |2: "D |3:           <<a href="D |4:           <<a href=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<a href="Dj
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 22
󰘫  |1: delta |2: Dj |3:           <<a href="Dj |4:           <<a href="D |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<a href="Dja
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: ja |3:           <<a href="Dja |4:           <<a href="Dj |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: <a href="Dja |3:           << |4:           <<a href="Dja |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<a href="Djang
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: delta |2: <a href="Djang |3:           <<a href="Djang |4:           << |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<a href="Django
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 26
󰘫  |1: delta |2: go |3:           <<a href="Django |4:           <<a href="Djang |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<a href="Django 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 27
󰘫  |1: delta |2: o  |3:           <<a href="Django  |4:           <<a href="Django |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<a href="Django b
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2:  b |3:           <<a href="Django b |4:           <<a href="Django  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<a href="Django 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 27
󰘫  |1: delta |2:  b |3:           <<a href="Django  |4:           <<a href="Django b |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<a href="Django B
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2:  B |3:           <<a href="Django B |4:           <<a href="Django  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<a href="Django Bl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 29
󰘫  |1: delta |2: Bl |3:           <<a href="Django Bl |4:           <<a href="Django B |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<a href="Django Blo
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: delta |2: lo |3:           <<a href="Django Blo |4:           <<a href="Django Bl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<a href="Django Blog
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: og |3:           <<a href="Django Blog |4:           <<a href="Django Blo |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2:  <<a href="Django Blog |3:            |4:           <<a href="Django Blog |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2:  <a  |3:           <a  |4:            |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2:  c |3:           <a c |4:           <a  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a cl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: cl |3:           <a cl |4:           <a c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a cla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2: la |3:           <a cla |4:           <a cl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a clas
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: as |3:           <a clas |4:           <a cla |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2: ss |3:           <a class |4:           <a clas |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2: s  |3:           <a class  |4:           <a class |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2: s  |3:           <a class |4:           <a class  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2: s= |3:           <a class= |4:           <a class |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2: =" |3:           <a class=" |4:           <a class= |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <a class=" |3:           < |4:           <a class=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: <a class="nav |3:           <a class="nav |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navb
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: delta |2: vb |3:           <a class="navb |4:           <a class="nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navba
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: delta |2: ba |3:           <a class="navba |4:           <a class="navb |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 26
󰘫  |1: delta |2: ar |3:           <a class="navbar |4:           <a class="navba |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 27
󰘫  |1: delta |2: r- |3:           <a class="navbar- |4:           <a class="navbar |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-b
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2: -b |3:           <a class="navbar-b |4:           <a class="navbar- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-br
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 29
󰘫  |1: delta |2: br |3:           <a class="navbar-br |4:           <a class="navbar-b |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-bra
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: delta |2: ra |3:           <a class="navbar-bra |4:           <a class="navbar-br |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-bran
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: an |3:           <a class="navbar-bran |4:           <a class="navbar-bra |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-brand
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2: nd |3:           <a class="navbar-brand |4:           <a class="navbar-bran |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-brand 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 33
󰘫  |1: delta |2: d  |3:           <a class="navbar-brand  |4:           <a class="navbar-brand |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-brand m
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 34
󰘫  |1: delta |2:  m |3:           <a class="navbar-brand m |4:           <a class="navbar-brand  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <a class="navbar-brand m |3:           < |4:           <a class="navbar-brand m |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-brand mr-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 36
󰘫  |1: delta |2: <a class="navbar-brand mr- |3:           <a class="navbar-brand mr- |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-brand mr-3
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 37
󰘫  |1: delta |2: -3 |3:           <a class="navbar-brand mr-3 |4:           <a class="navbar-brand mr- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-brand mr-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 36
󰘫  |1: delta |2: -3 |3:           <a class="navbar-brand mr- |4:           <a class="navbar-brand mr-3 |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-brand mr-4
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 37
󰘫  |1: delta |2: -4 |3:           <a class="navbar-brand mr-4 |4:           <a class="navbar-brand mr- |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-brand mr-4
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 37
󰘫  |1: delta |2:           <a class="navbar-brand mr-4 |3:           <a class="navbar-brand mr-4 |4:           <a class="navbar-brand mr-4 |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-brand mr-4" href="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 45
󰘫  |1: delta |2: 4" href=" |3:           <a class="navbar-brand mr-4" href=" |4:           <a class="navbar-brand mr-4 |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-brand mr-4" href="/
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 46
󰘫  |1: delta |2: "/ |3:           <a class="navbar-brand mr-4" href="/ |4:           <a class="navbar-brand mr-4" href=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <a class="navbar-brand mr-4" href="/ |3:           < |4:           <a class="navbar-brand mr-4" href="/ |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-brand mr-4" href=">
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 46
󰘫  |1: delta |2: <a class="navbar-brand mr-4" href="> |3:           <a class="navbar-brand mr-4" href="> |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <a class="navbar-brand mr-4" href="> |3:           < |4:           <a class="navbar-brand mr-4" href="> |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-brand mr-4" href="/
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 46
󰘫  |1: delta |2: <a class="navbar-brand mr-4" href="/ |3:           <a class="navbar-brand mr-4" href="/ |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-brand mr-4" href="/">
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 48
󰘫  |1: delta |2: /"> |3:           <a class="navbar-brand mr-4" href="/"> |4:           <a class="navbar-brand mr-4" href="/ |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-brand mr-4" href="/">
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 48
󰘫  |1: delta |2:           <a class="navbar-brand mr-4" href="/"> |3:           <a class="navbar-brand mr-4" href="/"> |4:           <a class="navbar-brand mr-4" href="/"> |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="navbar-brand mr-4" href="/">Django Blog"
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 60
󰘫  |1: delta |2: >Django Blog" |3:           <a class="navbar-brand mr-4" href="/">Django Blog" |4:           <a class="navbar-brand mr-4" href="/"> |5: {}

󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	[string ":lua"]:1: in main chunk
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <div class="cont
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2:     <div class="cont |3:     <div class="cont |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2:           <a class=" |3:           <a class=" |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <a class="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2:           <a class=" |3:           <a class=" |4:           <a class=" |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2:            |3:            |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2:  < |3:           < |4:            |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <bu
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2: <bu |3:           <bu |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: utton |3:           <button |4:           <bu |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2: n  |3:           <button  |4:           <button |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: n  |3:           <button |4:           <button  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<button>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2: on> |3:           <<button> |4:           <button |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2:  <<button> |3:            |4:           <<button> |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2:  <button> |3:           <button> |4:            |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button> 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2: >  |3:           <button>  |4:           <button> |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button> c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2:  c |3:           <button> c |4:           <button>  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button> 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2:  c |3:           <button>  |4:           <button> c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2: >  |3:           <button> |4:           <button>  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: n> |3:           <button |4:           <button> |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2: n  |3:           <button  |4:           <button |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2:  c |3:           <button c |4:           <button  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button cl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2: cl |3:           <button cl |4:           <button c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <button cl |3:           < |4:           <button cl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button clas
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 22
󰘫  |1: delta |2: <button clas |3:           <button clas |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: ss |3:           <button class |4:           <button clas |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: delta |2: s= |3:           <button class= |4:           <button class |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: delta |2: =" |3:           <button class=" |4:           <button class= |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 26
󰘫  |1: delta |2: "n |3:           <button class="n |4:           <button class=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 27
󰘫  |1: delta |2: na |3:           <button class="na |4:           <button class="n |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2: av |3:           <button class="nav |4:           <button class="na |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navb
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 29
󰘫  |1: delta |2: vb |3:           <button class="navb |4:           <button class="nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navba
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: delta |2: ba |3:           <button class="navba |4:           <button class="navb |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: ar |3:           <button class="navbar |4:           <button class="navba |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2: r- |3:           <button class="navbar- |4:           <button class="navbar |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-t
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 33
󰘫  |1: delta |2: -t |3:           <button class="navbar-t |4:           <button class="navbar- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-to
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 34
󰘫  |1: delta |2: to |3:           <button class="navbar-to |4:           <button class="navbar-t |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-tog
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 35
󰘫  |1: delta |2: og |3:           <button class="navbar-tog |4:           <button class="navbar-to |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-togg
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 36
󰘫  |1: delta |2: gg |3:           <button class="navbar-togg |4:           <button class="navbar-tog |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 37
󰘫  |1: delta |2: gl |3:           <button class="navbar-toggl |4:           <button class="navbar-togg |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 39
󰘫  |1: delta |2: ler |3:           <button class="navbar-toggler |4:           <button class="navbar-toggl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 41
󰘫  |1: delta |2: r"  |3:           <button class="navbar-toggler"  |4:           <button class="navbar-toggler |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" t
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 42
󰘫  |1: delta |2:  t |3:           <button class="navbar-toggler" t |4:           <button class="navbar-toggler"  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" ty
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 43
󰘫  |1: delta |2: ty |3:           <button class="navbar-toggler" ty |4:           <button class="navbar-toggler" t |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" typ
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 44
󰘫  |1: delta |2: yp |3:           <button class="navbar-toggler" typ |4:           <button class="navbar-toggler" ty |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <button class="navbar-toggler" typ |3:           < |4:           <button class="navbar-toggler" typ |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 46
󰘫  |1: delta |2: <button class="navbar-toggler" type= |3:           <button class="navbar-toggler" type= |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 47
󰘫  |1: delta |2: =" |3:           <button class="navbar-toggler" type=" |4:           <button class="navbar-toggler" type= |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="b
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 48
󰘫  |1: delta |2: "b |3:           <button class="navbar-toggler" type="b |4:           <button class="navbar-toggler" type=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="bu
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 49
󰘫  |1: delta |2: bu |3:           <button class="navbar-toggler" type="bu |4:           <button class="navbar-toggler" type="b |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="but
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 50
󰘫  |1: delta |2: ut |3:           <button class="navbar-toggler" type="but |4:           <button class="navbar-toggler" type="bu |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="butt
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 51
󰘫  |1: delta |2: tt |3:           <button class="navbar-toggler" type="butt |4:           <button class="navbar-toggler" type="but |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <button class="navbar-toggler" type="butt |3:           < |4:           <button class="navbar-toggler" type="butt |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 53
󰘫  |1: delta |2: <button class="navbar-toggler" type="button |3:           <button class="navbar-toggler" type="button |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 55
󰘫  |1: delta |2: n"  |3:           <button class="navbar-toggler" type="button"  |4:           <button class="navbar-toggler" type="button |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" d
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 56
󰘫  |1: delta |2:  d |3:           <button class="navbar-toggler" type="button" d |4:           <button class="navbar-toggler" type="button"  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" da
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 57
󰘫  |1: delta |2: da |3:           <button class="navbar-toggler" type="button" da |4:           <button class="navbar-toggler" type="button" d |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 59
󰘫  |1: delta |2: ata |3:           <button class="navbar-toggler" type="button" data |4:           <button class="navbar-toggler" type="button" da |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 60
󰘫  |1: delta |2: a- |3:           <button class="navbar-toggler" type="button" data- |4:           <button class="navbar-toggler" type="button" data |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-t
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 61
󰘫  |1: delta |2: -t |3:           <button class="navbar-toggler" type="button" data-t |4:           <button class="navbar-toggler" type="button" data- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-to
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 62
󰘫  |1: delta |2: to |3:           <button class="navbar-toggler" type="button" data-to |4:           <button class="navbar-toggler" type="button" data-t |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-tog
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 63
󰘫  |1: delta |2: og |3:           <button class="navbar-toggler" type="button" data-tog |4:           <button class="navbar-toggler" type="button" data-to |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-togg
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 64
󰘫  |1: delta |2: gg |3:           <button class="navbar-toggler" type="button" data-togg |4:           <button class="navbar-toggler" type="button" data-tog |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 65
󰘫  |1: delta |2: gl |3:           <button class="navbar-toggler" type="button" data-toggl |4:           <button class="navbar-toggler" type="button" data-togg |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 66
󰘫  |1: delta |2: le |3:           <button class="navbar-toggler" type="button" data-toggle |4:           <button class="navbar-toggler" type="button" data-toggl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 67
󰘫  |1: delta |2: e= |3:           <button class="navbar-toggler" type="button" data-toggle= |4:           <button class="navbar-toggler" type="button" data-toggle |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 68
󰘫  |1: delta |2: =" |3:           <button class="navbar-toggler" type="button" data-toggle=" |4:           <button class="navbar-toggler" type="button" data-toggle= |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 69
󰘫  |1: delta |2: "c |3:           <button class="navbar-toggler" type="button" data-toggle="c |4:           <button class="navbar-toggler" type="button" data-toggle=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="co
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 70
󰘫  |1: delta |2: co |3:           <button class="navbar-toggler" type="button" data-toggle="co |4:           <button class="navbar-toggler" type="button" data-toggle="c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="col
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 71
󰘫  |1: delta |2: ol |3:           <button class="navbar-toggler" type="button" data-toggle="col |4:           <button class="navbar-toggler" type="button" data-toggle="co |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <button class="navbar-toggler" type="button" data-toggle="col |3:           < |4:           <button class="navbar-toggler" type="button" data-toggle="col |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="colna
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 73
󰘫  |1: delta |2: <button class="navbar-toggler" type="button" data-toggle="colna |3:           <button class="navbar-toggler" type="button" data-toggle="colna |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="coln
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 72
󰘫  |1: delta |2: na |3:           <button class="navbar-toggler" type="button" data-toggle="coln |4:           <button class="navbar-toggler" type="button" data-toggle="colna |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="col
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 71
󰘫  |1: delta |2: ln |3:           <button class="navbar-toggler" type="button" data-toggle="col |4:           <button class="navbar-toggler" type="button" data-toggle="coln |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="coll
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 72
󰘫  |1: delta |2: ll |3:           <button class="navbar-toggler" type="button" data-toggle="coll |4:           <button class="navbar-toggler" type="button" data-toggle="col |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="colla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 73
󰘫  |1: delta |2: la |3:           <button class="navbar-toggler" type="button" data-toggle="colla |4:           <button class="navbar-toggler" type="button" data-toggle="coll |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collap
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 74
󰘫  |1: delta |2: ap |3:           <button class="navbar-toggler" type="button" data-toggle="collap |4:           <button class="navbar-toggler" type="button" data-toggle="colla |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collaps
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 75
󰘫  |1: delta |2: ps |3:           <button class="navbar-toggler" type="button" data-toggle="collaps |4:           <button class="navbar-toggler" type="button" data-toggle="collap |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 76
󰘫  |1: delta |2: se |3:           <button class="navbar-toggler" type="button" data-toggle="collapse |4:           <button class="navbar-toggler" type="button" data-toggle="collaps |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse"
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 77
󰘫  |1: delta |2: e" |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" |4:           <button class="navbar-toggler" type="button" data-toggle="collapse |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 78
󰘫  |1: delta |2: "  |3:           <button class="navbar-toggler" type="button" data-toggle="collapse"  |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" d
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 79
󰘫  |1: delta |2:  d |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" d |4:           <button class="navbar-toggler" type="button" data-toggle="collapse"  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" da
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 80
󰘫  |1: delta |2: da |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" da |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" d |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" dat
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 81
󰘫  |1: delta |2: at |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" dat |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" da |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 82
󰘫  |1: delta |2: ta |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" dat |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 83
󰘫  |1: delta |2: a- |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data- |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 83
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 82
󰘫  |1: delta |2: a- |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data_
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 83
󰘫  |1: delta |2: a_ |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data_ |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 82
󰘫  |1: delta |2: a_ |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data_ |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 83
󰘫  |1: delta |2: a- |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data- |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-t
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 84
󰘫  |1: delta |2: -t |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-t |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-to
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 85
󰘫  |1: delta |2: to |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-to |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-t |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-tog
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 86
󰘫  |1: delta |2: og |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-tog |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-to |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-togg
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 87
󰘫  |1: delta |2: gg |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-togg |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-tog |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 88
󰘫  |1: delta |2: gl |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggl |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-togg |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 89
󰘫  |1: delta |2: le |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggl |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 91
󰘫  |1: delta |2: e=" |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle=" |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 92
󰘫  |1: delta |2: "n |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="n |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 93
󰘫  |1: delta |2: na |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="na |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="n |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 94
󰘫  |1: delta |2: av |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="nav |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="na |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navb
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 95
󰘫  |1: delta |2: vb |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navb |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navba
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 96
󰘫  |1: delta |2: ba |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navba |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navb |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 97
󰘫  |1: delta |2: ar |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbar |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navba |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarT
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 98
󰘫  |1: delta |2: rT |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarT |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbar |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarTo
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 99
󰘫  |1: delta |2: To |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarTo |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarT |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarTog
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 100
󰘫  |1: delta |2: og |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarTog |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarTo |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarTogg
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 101
󰘫  |1: delta |2: gg |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarTogg |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarTog |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 102
󰘫  |1: delta |2: gl |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggl |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarTogg |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 103
󰘫  |1: delta |2: le |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 105
󰘫  |1: delta |2: e"  |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle"  |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 106
󰘫  |1: delta |2:  a |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" a |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle"  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" ar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 107
󰘫  |1: delta |2: ar |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" ar |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" a |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" ar |3:           < |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" ar |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 110
󰘫  |1: delta |2: <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria- |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria- |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 111
󰘫  |1: delta |2: -c |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-c |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-co
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 112
󰘫  |1: delta |2: co |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-co |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-con
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 113
󰘫  |1: delta |2: on |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-con |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-co |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-cont
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 114
󰘫  |1: delta |2: nt |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-cont |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-con |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-contr
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 115
󰘫  |1: delta |2: tr |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-contr |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-cont |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 120
󰘫  |1: delta |2: rols=" |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls=" |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-contr |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 122
󰘫  |1: delta |2: "na |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="na |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 123
󰘫  |1: delta |2: av |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="nav |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="na |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navb
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 124
󰘫  |1: delta |2: vb |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navb |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navba
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 125
󰘫  |1: delta |2: ba |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navba |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navb |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 126
󰘫  |1: delta |2: ar |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbar |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navba |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarT
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 127
󰘫  |1: delta |2: rT |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarT |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbar |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarTo
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 128
󰘫  |1: delta |2: To |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarTo |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarT |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarTog
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 129
󰘫  |1: delta |2: og |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarTog |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarTo |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarTogg
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 130
󰘫  |1: delta |2: gg |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarTogg |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarTog |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 131
󰘫  |1: delta |2: gl |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggl |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarTogg |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 132
󰘫  |1: delta |2: le |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 134
󰘫  |1: delta |2: e"  |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle"  |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 135
󰘫  |1: delta |2:  a |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" a |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle"  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" ar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 136
󰘫  |1: delta |2: ar |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" ar |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" a |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" ar |3:           < |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" ar |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 139
󰘫  |1: delta |2: <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria- |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria- |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-e
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 140
󰘫  |1: delta |2: -e |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-e |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-ex
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 141
󰘫  |1: delta |2: ex |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-ex |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-e |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 149
󰘫  |1: delta |2: xpanded=" |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded=" |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-ex |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="f
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 150
󰘫  |1: delta |2: "f |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="f |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="fa
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 151
󰘫  |1: delta |2: fa |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="fa |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="f |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="fal
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 152
󰘫  |1: delta |2: al |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="fal |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="fa |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="fals
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 153
󰘫  |1: delta |2: ls |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="fals |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="fal |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 154
󰘫  |1: delta |2: se |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="fals |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 155
󰘫  |1: delta |2: e  |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false  |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false o
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 156
󰘫  |1: delta |2:  o |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false o |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false o 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 157
󰘫  |1: delta |2: o  |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false o  |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false o |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false o
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 156
󰘫  |1: delta |2: o  |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false o |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false o  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 155
󰘫  |1: delta |2:  o |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false  |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false o |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 154
󰘫  |1: delta |2: e  |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 156
󰘫  |1: delta |2: e"  |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false"  |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 157
󰘫  |1: delta |2:  a |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" a |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false"  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" ar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 158
󰘫  |1: delta |2: ar |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" ar |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" a |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" ar |3:           < |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" ar |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 161
󰘫  |1: delta |2: <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria- |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria- |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-l
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 162
󰘫  |1: delta |2: -l |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-l |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-la
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 163
󰘫  |1: delta |2: la |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-la |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-l |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 168
󰘫  |1: delta |2: abel=" |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label=" |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-la |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="T
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 169
󰘫  |1: delta |2: "T |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="T |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="To
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 170
󰘫  |1: delta |2: To |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="To |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="T |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="To |3:           < |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="To |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Togg
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 172
󰘫  |1: delta |2: <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Togg |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Togg |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 173
󰘫  |1: delta |2: gl |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggl |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Togg |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 174
󰘫  |1: delta |2: le |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 175
󰘫  |1: delta |2: e  |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle  |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 176
󰘫  |1: delta |2:  n |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle n |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 177
󰘫  |1: delta |2: na |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle na |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle n |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 178
󰘫  |1: delta |2: av |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle nav |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle na |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle nav |3:           < |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle naviga
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 181
󰘫  |1: delta |2: <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle naviga |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle naviga |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle navigat
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 182
󰘫  |1: delta |2: at |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle navigat |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle naviga |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle navigation
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 185
󰘫  |1: delta |2: tion |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle navigation |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle navigat |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle navigation">
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 187
󰘫  |1: delta |2: n"> |3:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle navigation"> |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle navigation |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle navigation"> |3:              |4:           <button class="navbar-toggler" type="button" data-toggle="collapse" data-toggle="navbarToggle" aria-controls="navbarToggle" aria-expanded="false" aria-label="Toggle navigation"> |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2:     |3:            |4:              |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 8
󰘫  |1: delta |2:     |3:          |4:            |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:          
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 9
󰘫  |1: delta |2:    |3:           |4:          |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2:    |3:            |4:           |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2:  < |3:           < |4:            |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <s
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: <s |3:           <s |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <sp
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2: sp |3:           <sp |4:           <s |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <spa
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2: pa |3:           <spa |4:           <sp |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: an |3:           <span |4:           <spa |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span<
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2: n< |3:           <span< |4:           <span |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: n< |3:           <span |4:           <span< |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2: n> |3:           <span> |4:           <span |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: n> |3:           <span |4:           <span> |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2: n> |3:           <span> |4:           <span |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: n> |3:           <span |4:           <span> |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<span>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: an> |3:           <<span> |4:           <span |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<span
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2: n> |3:           <<span |4:           <<span> |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<spa
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: an |3:           <<spa |4:           <<span |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<sp
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2: pa |3:           <<sp |4:           <<spa |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<s
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2: sp |3:           <<s |4:           <<sp |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <<
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: <s |3:           << |4:           <<s |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2:  << |3:            |4:           << |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           s
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2:  s |3:           s |4:            |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           sp
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: sp |3:           sp |4:           s |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           spa
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2: pa |3:           spa |4:           sp |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           span
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2: an |3:           span |4:           spa |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2: an> |3:           <span> |4:           span |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: >  |3:           <span>  |4:           <span> |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2:  c |3:           <span> c |4:           <span>  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> cl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2: cl |3:           <span> cl |4:           <span> c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> cla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2: la |3:           <span> cla |4:           <span> cl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> clas
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 21
󰘫  |1: delta |2: as |3:           <span> clas |4:           <span> cla |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 22
󰘫  |1: delta |2: ss |3:           <span> class |4:           <span> clas |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: s= |3:           <span> class= |4:           <span> class |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: delta |2: =" |3:           <span> class=" |4:           <span> class= |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: delta |2: "n |3:           <span> class="n |4:           <span> class=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 26
󰘫  |1: delta |2: na |3:           <span> class="na |4:           <span> class="n |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 27
󰘫  |1: delta |2: av |3:           <span> class="nav |4:           <span> class="na |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navb
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2: vb |3:           <span> class="navb |4:           <span> class="nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navba
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 29
󰘫  |1: delta |2: ba |3:           <span> class="navba |4:           <span> class="navb |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navbar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: delta |2: ar |3:           <span> class="navbar |4:           <span> class="navba |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navbar-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: r- |3:           <span> class="navbar- |4:           <span> class="navbar |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navbar-t
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2: -t |3:           <span> class="navbar-t |4:           <span> class="navbar- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navbar-to
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 33
󰘫  |1: delta |2: to |3:           <span> class="navbar-to |4:           <span> class="navbar-t |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navbar-toggler
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 38
󰘫  |1: delta |2: oggler |3:           <span> class="navbar-toggler |4:           <span> class="navbar-to |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navbar-toggler
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 38
󰘫  |1: delta |2:           <span> class="navbar-toggler |3:           <span> class="navbar-toggler |4:           <span> class="navbar-toggler |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navbar-toggler-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 39
󰘫  |1: delta |2: r- |3:           <span> class="navbar-toggler- |4:           <span> class="navbar-toggler |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navbar-toggler-ic
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 41
󰘫  |1: delta |2: -ic |3:           <span> class="navbar-toggler-ic |4:           <span> class="navbar-toggler- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navbar-toggler-ico
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 42
󰘫  |1: delta |2: co |3:           <span> class="navbar-toggler-ico |4:           <span> class="navbar-toggler-ic |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navbar-toggler-icon
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 43
󰘫  |1: delta |2: on |3:           <span> class="navbar-toggler-icon |4:           <span> class="navbar-toggler-ico |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navbar-toggler-icon" 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 45
󰘫  |1: delta |2: n"  |3:           <span> class="navbar-toggler-icon"  |4:           <span> class="navbar-toggler-icon |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navbar-toggler-icon"
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 44
󰘫  |1: delta |2: "  |3:           <span> class="navbar-toggler-icon" |4:           <span> class="navbar-toggler-icon"  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navbar-toggler-icon">
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 45
󰘫  |1: delta |2: "> |3:           <span> class="navbar-toggler-icon"> |4:           <span> class="navbar-toggler-icon" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navbar-toggler-icon"><
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 46
󰘫  |1: delta |2: >< |3:           <span> class="navbar-toggler-icon">< |4:           <span> class="navbar-toggler-icon"> |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navbar-toggler-icon"><
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 46
󰘫  |1: delta |2:           <span> class="navbar-toggler-icon">< |3:           <span> class="navbar-toggler-icon">< |4:           <span> class="navbar-toggler-icon">< |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navbar-toggler-icon"><span
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 50
󰘫  |1: delta |2: <span |3:           <span> class="navbar-toggler-icon"><span |4:           <span> class="navbar-toggler-icon">< |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navbar-toggler-icon"></span>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 52
󰘫  |1: delta |2: an> |3:           <span> class="navbar-toggler-icon"></span> |4:           <span> class="navbar-toggler-icon"><span |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span> class="navbar-toggler-icon"></span>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 52
󰘫  |1: delta |2:           <span> class="navbar-toggler-icon"></span> |3:           <span> class="navbar-toggler-icon"></span> |4:           <span> class="navbar-toggler-icon"></span> |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: span> class="navbar-toggler-icon"></span> |3:              |4:           <span> class="navbar-toggler-icon"></span> |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             b
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2:  b |3:             b |4:              |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             bu
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2: bu |3:             bu |4:             b |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             but
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: ut |3:             but |4:             bu |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             butt
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2: tt |3:             butt |4:             but |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <butt>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2: tt> |3:             <butt> |4:             butt |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <butt
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: t> |3:             <butt |4:             <butt> |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <but
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2: tt |3:             <but |4:             <butt |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <bu
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: ut |3:             <bu |4:             <but |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <b
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2: bu |3:             <b |4:             <bu |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2: <b |3:             < |4:             <b |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2:  < |3:              |4:             < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             </button
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2:  </button |3:             </button |4:              |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2:    </button |3:            |4:             </button |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           d
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2:  d |3:           d |4:            |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           div
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2: div |3:           div |4:           d |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: iv> |3:           <div> |4:           div |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2: >  |3:           <div>  |4:           <div> |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2:  c |3:           <div> c |4:           <div>  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> ca
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2: ca |3:           <div> ca |4:           <div> c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> cal
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2: al |3:           <div> cal |4:           <div> ca |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> call
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2: ll |3:           <div> call |4:           <div> cal |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> cal
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2: ll |3:           <div> cal |4:           <div> call |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> ca
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2: al |3:           <div> ca |4:           <div> cal |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: ca |3:           <div> c |4:           <div> ca |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> cl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2: cl |3:           <div> cl |4:           <div> c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> cla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2: la |3:           <div> cla |4:           <div> cl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> clas
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2: as |3:           <div> clas |4:           <div> cla |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 21
󰘫  |1: delta |2: ss |3:           <div> class |4:           <div> clas |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> <class>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: ss> |3:           <div> <class> |4:           <div> class |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> <class>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2:           <div> <class> |3:           <div> <class> |4:           <div> <class> |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: <class> |3:           <div> < |4:           <div> <class> |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> <clas
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 21
󰘫  |1: delta |2: <clas |3:           <div> <clas |4:           <div> < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> <cla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2: as |3:           <div> <cla |4:           <div> <clas |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> <cl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2: la |3:           <div> <cl |4:           <div> <cla |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> <c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2: cl |3:           <div> <c |4:           <div> <cl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: <c |3:           <div> < |4:           <div> <c |5: {}

󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	[string ":lua"]:1: in main chunk
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2:           <div>  |3:           <div>  |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2:            |3:            |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           d
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2:  d |3:           d |4:            |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           div
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2: div |3:           div |4:           d |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: iv> |3:           <div> |4:           div |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2:           <div> |3:           <div> |4:           <div> |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: div> |3:              |4:           <div> |5: {}

󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	[string ":lua"]:1: in main chunk
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: 
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 0
󰘫  |1: delta |2:  |3:  |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2:           <div> |3:           <div> |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2: >  |3:           <div>  |4:           <div> |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2:  c |3:           <div> c |4:           <div>  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div> 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2:  c |3:           <div>  |4:           <div> c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: >  |3:           <div> |4:           <div>  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2:  c |3:           <div c |4:           <div  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div cl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: cl |3:           <div cl |4:           <div c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div cla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2: la |3:           <div cla |4:           <div cl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div clas
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2: as |3:           <div clas |4:           <div cla |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2: ss |3:           <div class |4:           <div clas |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 21
󰘫  |1: delta |2: s= |3:           <div class= |4:           <div class |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 22
󰘫  |1: delta |2: =" |3:           <div class=" |4:           <div class= |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: "c |3:           <div class="c |4:           <div class=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="co
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: delta |2: co |3:           <div class="co |4:           <div class="c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="col
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: delta |2: ol |3:           <div class="col |4:           <div class="co |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="coll
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 26
󰘫  |1: delta |2: ll |3:           <div class="coll |4:           <div class="col |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="colla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 27
󰘫  |1: delta |2: la |3:           <div class="colla |4:           <div class="coll |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: delta |2: apse |3:           <div class="collapse |4:           <div class="colla |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: e  |3:           <div class="collapse  |4:           <div class="collapse |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2:  n |3:           <div class="collapse n |4:           <div class="collapse  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 33
󰘫  |1: delta |2: na |3:           <div class="collapse na |4:           <div class="collapse n |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 34
󰘫  |1: delta |2: av |3:           <div class="collapse nav |4:           <div class="collapse na |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navb
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 35
󰘫  |1: delta |2: vb |3:           <div class="collapse navb |4:           <div class="collapse nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navba
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 36
󰘫  |1: delta |2: ba |3:           <div class="collapse navba |4:           <div class="collapse navb |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 37
󰘫  |1: delta |2: ar |3:           <div class="collapse navbar |4:           <div class="collapse navba |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 38
󰘫  |1: delta |2: r- |3:           <div class="collapse navbar- |4:           <div class="collapse navbar |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 39
󰘫  |1: delta |2: -c |3:           <div class="collapse navbar-c |4:           <div class="collapse navbar- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-co
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 40
󰘫  |1: delta |2: co |3:           <div class="collapse navbar-co |4:           <div class="collapse navbar-c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-col
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 41
󰘫  |1: delta |2: ol |3:           <div class="collapse navbar-col |4:           <div class="collapse navbar-co |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-coll
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 42
󰘫  |1: delta |2: ll |3:           <div class="collapse navbar-coll |4:           <div class="collapse navbar-col |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-colla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 43
󰘫  |1: delta |2: la |3:           <div class="collapse navbar-colla |4:           <div class="collapse navbar-coll |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-collap
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 44
󰘫  |1: delta |2: ap |3:           <div class="collapse navbar-collap |4:           <div class="collapse navbar-colla |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-collaps
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 45
󰘫  |1: delta |2: ps |3:           <div class="collapse navbar-collaps |4:           <div class="collapse navbar-collap |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-collapse
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 46
󰘫  |1: delta |2: se |3:           <div class="collapse navbar-collapse |4:           <div class="collapse navbar-collaps |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-collapse" 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 48
󰘫  |1: delta |2: e"  |3:           <div class="collapse navbar-collapse"  |4:           <div class="collapse navbar-collapse |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: <div class="collapse navbar-collapse"  |3:           < |4:           <div class="collapse navbar-collapse"  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-collapse" id=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 51
󰘫  |1: delta |2: <div class="collapse navbar-collapse" id= |3:           <div class="collapse navbar-collapse" id= |4:           < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-collapse" id="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 52
󰘫  |1: delta |2: =" |3:           <div class="collapse navbar-collapse" id=" |4:           <div class="collapse navbar-collapse" id= |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-collapse" id="n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 53
󰘫  |1: delta |2: "n |3:           <div class="collapse navbar-collapse" id="n |4:           <div class="collapse navbar-collapse" id=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-collapse" id="na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 54
󰘫  |1: delta |2: na |3:           <div class="collapse navbar-collapse" id="na |4:           <div class="collapse navbar-collapse" id="n |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-collapse" id="nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 55
󰘫  |1: delta |2: av |3:           <div class="collapse navbar-collapse" id="nav |4:           <div class="collapse navbar-collapse" id="na |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-collapse" id="navb
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 56
󰘫  |1: delta |2: vb |3:           <div class="collapse navbar-collapse" id="navb |4:           <div class="collapse navbar-collapse" id="nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-collapse" id="navba
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 57
󰘫  |1: delta |2: ba |3:           <div class="collapse navbar-collapse" id="navba |4:           <div class="collapse navbar-collapse" id="navb |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-collapse" id="navbar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 58
󰘫  |1: delta |2: ar |3:           <div class="collapse navbar-collapse" id="navbar |4:           <div class="collapse navbar-collapse" id="navba |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-collapse" id="navbarT
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 59
󰘫  |1: delta |2: rT |3:           <div class="collapse navbar-collapse" id="navbarT |4:           <div class="collapse navbar-collapse" id="navbar |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-collapse" id="navbarToggle
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 64
󰘫  |1: delta |2: Toggle |3:           <div class="collapse navbar-collapse" id="navbarToggle |4:           <div class="collapse navbar-collapse" id="navbarT |5: {}

󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	[string ":lua"]:1: in main chunk
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <div class="collapse navbar-collapse" id="navbarToggle"
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 65
󰘫  |1: delta |2:           <div class="collapse navbar-collapse" id="navbarToggle" |3:           <div class="collapse navbar-collapse" id="navbarToggle" |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2:              |3:              |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             d
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2:  d |3:             d |4:              |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             div
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: div |3:             div |4:             d |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: iv> |3:             <div> |4:             div |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2:             <div> |3:             <div> |4:             <div> |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2: div> |3:                |4:             <div> |5: {}

󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	[string ":lua"]:1: in main chunk
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: 
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 0
󰘫  |1: delta |2:  |3:  |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2:             <div> |3:             <div> |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2: >  |3:             <div>  |4:             <div> |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2:  c |3:             <div> c |4:             <div>  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> cl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2: cl |3:             <div> cl |4:             <div> c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> cla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 21
󰘫  |1: delta |2: la |3:             <div> cla |4:             <div> cl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> clas
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 22
󰘫  |1: delta |2: as |3:             <div> clas |4:             <div> cla |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: ss |3:             <div> class |4:             <div> clas |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: delta |2: s= |3:             <div> class= |4:             <div> class |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: delta |2: =" |3:             <div> class=" |4:             <div> class= |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 26
󰘫  |1: delta |2: "n |3:             <div> class="n |4:             <div> class=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 27
󰘫  |1: delta |2: na |3:             <div> class="na |4:             <div> class="n |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2: av |3:             <div> class="nav |4:             <div> class="na |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="navb
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 29
󰘫  |1: delta |2: vb |3:             <div> class="navb |4:             <div> class="nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="navba
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: delta |2: ba |3:             <div> class="navba |4:             <div> class="navb |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="navbar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: ar |3:             <div> class="navbar |4:             <div> class="navba |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="navbar-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2: r- |3:             <div> class="navbar- |4:             <div> class="navbar |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="navbar-n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 33
󰘫  |1: delta |2: -n |3:             <div> class="navbar-n |4:             <div> class="navbar- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="navbar-na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 34
󰘫  |1: delta |2: na |3:             <div> class="navbar-na |4:             <div> class="navbar-n |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="navbar-nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 35
󰘫  |1: delta |2: av |3:             <div> class="navbar-nav |4:             <div> class="navbar-na |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="navbar-nav 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 36
󰘫  |1: delta |2: v  |3:             <div> class="navbar-nav  |4:             <div> class="navbar-nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="navbar-nav m
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 37
󰘫  |1: delta |2:  m |3:             <div> class="navbar-nav m |4:             <div> class="navbar-nav  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="navbar-nav mr
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 38
󰘫  |1: delta |2: mr |3:             <div> class="navbar-nav mr |4:             <div> class="navbar-nav m |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="navbar-nav mr-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 39
󰘫  |1: delta |2: r- |3:             <div> class="navbar-nav mr- |4:             <div> class="navbar-nav mr |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="navbar-nav mr-a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 40
󰘫  |1: delta |2: -a |3:             <div> class="navbar-nav mr-a |4:             <div> class="navbar-nav mr- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="navbar-nav mr-au
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 41
󰘫  |1: delta |2: au |3:             <div> class="navbar-nav mr-au |4:             <div> class="navbar-nav mr-a |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="navbar-nav mr-aut
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 42
󰘫  |1: delta |2: ut |3:             <div> class="navbar-nav mr-aut |4:             <div> class="navbar-nav mr-au |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="navbar-nav mr-auto
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 43
󰘫  |1: delta |2: to |3:             <div> class="navbar-nav mr-auto |4:             <div> class="navbar-nav mr-aut |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="navbar-nav mr-auto">
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 45
󰘫  |1: delta |2: o"> |3:             <div> class="navbar-nav mr-auto"> |4:             <div> class="navbar-nav mr-auto |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div> class="navbar-nav mr-auto">
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 45
󰘫  |1: delta |2:             <div> class="navbar-nav mr-auto"> |3:             <div> class="navbar-nav mr-auto"> |4:             <div> class="navbar-nav mr-auto"> |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2: v> class="navbar-nav mr-auto"> |3:             <div |4:             <div> class="navbar-nav mr-auto"> |5: {}

󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	[string ":lua"]:1: in main chunk
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: 
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 0
󰘫  |1: delta |2:  |3:  |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2:                |3:                |4:  |5: {}

󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	[string ":lua"]:1: in main chunk
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: 
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 0
󰘫  |1: delta |2:  |3:  |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: 
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 0
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	[string ":lua"]:1: in main chunk
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: 
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 0
󰘫  |1: delta |2:  |3:  |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2:                |3:                |4:  |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2:                |3:                |4:                |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2:  a |3:               a |4:                |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: <a href=" |3:               <a href=" |4:               a |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2:               <a href=" |3:               <a href=" |4:               <a href=" |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="/
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: delta |2: "/ |3:               <a href="/ |4:               <a href=" |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="/
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: delta |2:               <a href="/ |3:               <a href="/ |4:               <a href="/ |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="/"><H
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2: /"><H |3:               <a href="/"><H |4:               <a href="/ |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="/"><Ho
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 29
󰘫  |1: delta |2: Ho |3:               <a href="/"><Ho |4:               <a href="/"><H |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="/"><Hom
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: delta |2: om |3:               <a href="/"><Hom |4:               <a href="/"><Ho |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="/"><Home
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: me |3:               <a href="/"><Home |4:               <a href="/"><Hom |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="/"><Home<
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2: e< |3:               <a href="/"><Home< |4:               <a href="/"><Home |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="/"><Hom
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: delta |2: me< |3:               <a href="/"><Hom |4:               <a href="/"><Home< |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2:  <a href="/"><Hom |3:                |4:               <a href="/"><Hom |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2:  a |3:               a |4:                |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: <a href=" |3:               <a href=" |4:               a |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2:               <a href=" |3:               <a href=" |4:               <a href=" |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="/
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: delta |2: "/ |3:               <a href="/ |4:               <a href=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="/a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: delta |2: /a |3:               <a href="/a |4:               <a href="/ |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="/ab
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 26
󰘫  |1: delta |2: ab |3:               <a href="/ab |4:               <a href="/a |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="/abo
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 27
󰘫  |1: delta |2: bo |3:               <a href="/abo |4:               <a href="/ab |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="/abou
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2: ou |3:               <a href="/abou |4:               <a href="/abo |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="/about
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 29
󰘫  |1: delta |2: ut |3:               <a href="/about |4:               <a href="/abou |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="/about">about
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 36
󰘫  |1: delta |2: t">about |3:               <a href="/about">about |4:               <a href="/about |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="/about">about
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 36
󰘫  |1: delta |2:               <a href="/about">about |3:               <a href="/about">about |4:               <a href="/about">about |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	[string ":lua"]:1: in main chunk
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2:               <a |3:               <a |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2:               <a |3:               <a |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: a  |3:               <a  |4:               <a |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2:  c |3:               <a c |4:               <a  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a cl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2: cl |3:               <a cl |4:               <a c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a cla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2: la |3:               <a cla |4:               <a cl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a clas
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 21
󰘫  |1: delta |2: as |3:               <a clas |4:               <a cla |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 22
󰘫  |1: delta |2: ss |3:               <a class |4:               <a clas |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: s= |3:               <a class= |4:               <a class |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: delta |2: =" |3:               <a class=" |4:               <a class= |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: delta |2: "n |3:               <a class="n |4:               <a class=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 26
󰘫  |1: delta |2: na |3:               <a class="na |4:               <a class="n |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 27
󰘫  |1: delta |2: av |3:               <a class="nav |4:               <a class="na |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2: v- |3:               <a class="nav- |4:               <a class="nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: <a class="nav- |3:               < |4:               <a class="nav- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-ite
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: <a class="nav-ite |3:               <a class="nav-ite |4:               < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2: em |3:               <a class="nav-item |4:               <a class="nav-ite |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 33
󰘫  |1: delta |2: m  |3:               <a class="nav-item  |4:               <a class="nav-item |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 34
󰘫  |1: delta |2:  n |3:               <a class="nav-item n |4:               <a class="nav-item  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 35
󰘫  |1: delta |2: na |3:               <a class="nav-item na |4:               <a class="nav-item n |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 36
󰘫  |1: delta |2: av |3:               <a class="nav-item nav |4:               <a class="nav-item na |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 37
󰘫  |1: delta |2: v- |3:               <a class="nav-item nav- |4:               <a class="nav-item nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-l
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 38
󰘫  |1: delta |2: -l |3:               <a class="nav-item nav-l |4:               <a class="nav-item nav- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: <a class="nav-item nav-l |3:               < |4:               <a class="nav-item nav-l |5: {}

󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	[string ":lua"]:1: in main chunk
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="/about">about</a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 39
󰘫  |1: delta |2:               <a href="/about">about</a |3:               <a href="/about">about</a |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2:               <a  |3:               <a  |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a  
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2:    |3:               <a   |4:               <a  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2:    |3:               <a  |4:               <a   |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2:  c |3:               <a c |4:               <a  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a cla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2: cla |3:               <a cla |4:               <a c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a clas
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 21
󰘫  |1: delta |2: as |3:               <a clas |4:               <a cla |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 22
󰘫  |1: delta |2: ss |3:               <a class |4:               <a clas |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: s= |3:               <a class= |4:               <a class |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: delta |2: =" |3:               <a class=" |4:               <a class= |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class=""
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: delta |2: "" |3:               <a class="" |4:               <a class=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 26
󰘫  |1: delta |2: na |3:               <a class="na |4:               <a class="n |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 27
󰘫  |1: delta |2: av |3:               <a class="nav |4:               <a class="na |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2: v- |3:               <a class="nav- |4:               <a class="nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: <a class="nav- |3:               < |4:               <a class="nav- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-ite
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: <a class="nav-ite |3:               <a class="nav-ite |4:               < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-iten
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2: en |3:               <a class="nav-iten |4:               <a class="nav-ite |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-ite
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: en |3:               <a class="nav-ite |4:               <a class="nav-iten |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2: em |3:               <a class="nav-item |4:               <a class="nav-ite |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 33
󰘫  |1: delta |2: m  |3:               <a class="nav-item  |4:               <a class="nav-item |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 35
󰘫  |1: delta |2:  na |3:               <a class="nav-item na |4:               <a class="nav-item  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 36
󰘫  |1: delta |2: av |3:               <a class="nav-item nav |4:               <a class="nav-item na |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 37
󰘫  |1: delta |2: v- |3:               <a class="nav-item nav- |4:               <a class="nav-item nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-l
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 38
󰘫  |1: delta |2: -l |3:               <a class="nav-item nav-l |4:               <a class="nav-item nav- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 41
󰘫  |1: delta |2: link |3:               <a class="nav-item nav-link |4:               <a class="nav-item nav-l |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link" 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 43
󰘫  |1: delta |2: k"  |3:               <a class="nav-item nav-link"  |4:               <a class="nav-item nav-link |5: {}

󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	[string ":lua"]:1: in main chunk
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             </div
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2:             </div |3:             </div |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: 
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 0
󰘫  |1: delta |2:  |3:  |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2:              |3:              |4:  |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2:              |3:              |4:              |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             d
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2:  d |3:             d |4:              |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             div
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: div |3:             div |4:             d |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2: iv> |3:             <div> |4:             div |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2: div> |3:                |4:             <div> |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               a
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2:  a |3:               a |4:                |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: <a href=" |3:               <a href=" |4:               a |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="#
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: delta |2: "# |3:               <a href="# |4:               <a href=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="#">L
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 27
󰘫  |1: delta |2: #">L |3:               <a href="#">L |4:               <a href="# |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="#">Lo
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2: Lo |3:               <a href="#">Lo |4:               <a href="#">L |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="#">Log
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 29
󰘫  |1: delta |2: og |3:               <a href="#">Log |4:               <a href="#">Lo |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a href="#">Login
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: gin |3:               <a href="#">Login |4:               <a href="#">Log |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2: href="#">Login |3:               <a c |4:               <a href="#">Login |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a cl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2: cl |3:               <a cl |4:               <a c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a cla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2: la |3:               <a cla |4:               <a cl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a clas
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 21
󰘫  |1: delta |2: as |3:               <a clas |4:               <a cla |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 22
󰘫  |1: delta |2: ss |3:               <a class |4:               <a clas |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: s= |3:               <a class= |4:               <a class |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class= 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: delta |2: =  |3:               <a class=  |4:               <a class= |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: =  |3:               <a class= |4:               <a class=  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: delta |2: =" |3:               <a class=" |4:               <a class= |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class=""
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: delta |2: "" |3:               <a class="" |4:               <a class=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 26
󰘫  |1: delta |2: na |3:               <a class="na |4:               <a class="" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: <a class="na |3:               < |4:               <a class="na |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav.ite
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: <a class="nav.ite |3:               <a class="nav.ite |4:               < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav.item
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2: em |3:               <a class="nav.item |4:               <a class="nav.ite |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav.ite
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: em |3:               <a class="nav.ite |4:               <a class="nav.item |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav.it
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: delta |2: te |3:               <a class="nav.it |4:               <a class="nav.ite |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav.i
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 29
󰘫  |1: delta |2: it |3:               <a class="nav.i |4:               <a class="nav.it |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav.
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2: .i |3:               <a class="nav. |4:               <a class="nav.i |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 27
󰘫  |1: delta |2: v. |3:               <a class="nav |4:               <a class="nav. |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2: v- |3:               <a class="nav- |4:               <a class="nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: <a class="nav- |3:               < |4:               <a class="nav- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-ite
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: <a class="nav-ite |3:               <a class="nav-ite |4:               < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2: em |3:               <a class="nav-item |4:               <a class="nav-ite |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 33
󰘫  |1: delta |2: m  |3:               <a class="nav-item  |4:               <a class="nav-item |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 34
󰘫  |1: delta |2:  n |3:               <a class="nav-item n |4:               <a class="nav-item  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: <a class="nav-item n |3:               < |4:               <a class="nav-item n |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 36
󰘫  |1: delta |2: <a class="nav-item nav |3:               <a class="nav-item nav |4:               < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 37
󰘫  |1: delta |2: v- |3:               <a class="nav-item nav- |4:               <a class="nav-item nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-l
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 38
󰘫  |1: delta |2: -l |3:               <a class="nav-item nav-l |4:               <a class="nav-item nav- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 41
󰘫  |1: delta |2: link |3:               <a class="nav-item nav-link |4:               <a class="nav-item nav-l |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link" 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 43
󰘫  |1: delta |2: k"  |3:               <a class="nav-item nav-link"  |4:               <a class="nav-item nav-link |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link"  
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 44
󰘫  |1: delta |2:    |3:               <a class="nav-item nav-link"   |4:               <a class="nav-item nav-link"  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link" 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 43
󰘫  |1: delta |2:    |3:               <a class="nav-item nav-link"  |4:               <a class="nav-item nav-link"   |5: {}

󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	[string ":lua"]:1: in main chunk
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2:             <div |3:             <div |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: delta |2:             <div> |3:             <div> |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 17
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 18
󰘫  |1: delta |2:  c |3:             <div c |4:             <div  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div cl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 19
󰘫  |1: delta |2: cl |3:             <div cl |4:             <div c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div cla
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 20
󰘫  |1: delta |2: la |3:             <div cla |4:             <div cl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div clas
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 21
󰘫  |1: delta |2: as |3:             <div clas |4:             <div cla |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 22
󰘫  |1: delta |2: ss |3:             <div class |4:             <div clas |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div class=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: s= |3:             <div class= |4:             <div class |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div class="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: delta |2: =" |3:             <div class=" |4:             <div class= |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div class="n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: delta |2: "n |3:             <div class="n |4:             <div class=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div class="na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 26
󰘫  |1: delta |2: na |3:             <div class="na |4:             <div class="n |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div class="nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 27
󰘫  |1: delta |2: av |3:             <div class="nav |4:             <div class="na |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div class="navb
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2: vb |3:             <div class="navb |4:             <div class="nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div class="navba
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 29
󰘫  |1: delta |2: ba |3:             <div class="navba |4:             <div class="navb |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div class="navbar
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: delta |2: ar |3:             <div class="navbar |4:             <div class="navba |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div class="navbar-
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: r- |3:             <div class="navbar- |4:             <div class="navbar |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div class="navbar-n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2: -n |3:             <div class="navbar-n |4:             <div class="navbar- |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div class="navbar-na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 33
󰘫  |1: delta |2: na |3:             <div class="navbar-na |4:             <div class="navbar-n |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:             <div class="navbar-nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 34
󰘫  |1: delta |2: av |3:             <div class="navbar-nav |4:             <div class="navbar-na |5: {}

󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	[string ":lua"]:1: in main chunk
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 35
󰘫  |1: delta |2:               <a class="nav-item na |3:               <a class="nav-item na |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link" href="#">Login
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 57
󰘫  |1: delta |2:               <a class="nav-item nav-link" href="#">Login |3:               <a class="nav-item nav-link" href="#">Login |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link" href="#">Logi
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 56
󰘫  |1: delta |2: in |3:               <a class="nav-item nav-link" href="#">Logi |4:               <a class="nav-item nav-link" href="#">Login |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link" href="#">Log
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 55
󰘫  |1: delta |2: gi |3:               <a class="nav-item nav-link" href="#">Log |4:               <a class="nav-item nav-link" href="#">Logi |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link" href="#">Lo
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 54
󰘫  |1: delta |2: og |3:               <a class="nav-item nav-link" href="#">Lo |4:               <a class="nav-item nav-link" href="#">Log |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link" href="#">L
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 53
󰘫  |1: delta |2: Lo |3:               <a class="nav-item nav-link" href="#">L |4:               <a class="nav-item nav-link" href="#">Lo |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link" href="#">
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 52
󰘫  |1: delta |2: >L |3:               <a class="nav-item nav-link" href="#"> |4:               <a class="nav-item nav-link" href="#">L |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link" href="#">R
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 53
󰘫  |1: delta |2: >R |3:               <a class="nav-item nav-link" href="#">R |4:               <a class="nav-item nav-link" href="#"> |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link" href="#">Re
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 54
󰘫  |1: delta |2: Re |3:               <a class="nav-item nav-link" href="#">Re |4:               <a class="nav-item nav-link" href="#">R |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link" href="#">Reg
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 55
󰘫  |1: delta |2: eg |3:               <a class="nav-item nav-link" href="#">Reg |4:               <a class="nav-item nav-link" href="#">Re |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link" href="#">Regis
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 57
󰘫  |1: delta |2: gis |3:               <a class="nav-item nav-link" href="#">Regis |4:               <a class="nav-item nav-link" href="#">Reg |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link" href="#">Regist
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 58
󰘫  |1: delta |2: st |3:               <a class="nav-item nav-link" href="#">Regist |4:               <a class="nav-item nav-link" href="#">Regis |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link" href="#">Registe
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 59
󰘫  |1: delta |2: te |3:               <a class="nav-item nav-link" href="#">Registe |4:               <a class="nav-item nav-link" href="#">Regist |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link" href="#">Register
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 60
󰘫  |1: delta |2: er |3:               <a class="nav-item nav-link" href="#">Register |4:               <a class="nav-item nav-link" href="#">Registe |5: {}

󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class="nav-item nav-link" href="#">Registe
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 59
󰘫  |1: delta |2:               <a class="nav-item nav-link" href="#">Registe |3:               <a class="nav-item nav-link" href="#">Registe |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           </div
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: <a class="nav-item nav-link" href="#">Registe |3:           </div |4:               <a class="nav-item nav-link" href="#">Registe |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2:            |3:            |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           \
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2:  \ |3:           \ |4:            |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           \n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: \n |3:           \n |4:           \ |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           \na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2: na |3:           \na |4:           \n |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           \nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2: av |3:           \nav |4:           \na |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           \<nav>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2: av> |3:           \<nav> |4:           \nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           \<nav
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: v> |3:           \<nav |4:           \<nav> |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           \<na
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2: av |3:           \<na |4:           \<nav |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           \<n
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 13
󰘫  |1: delta |2: na |3:           \<n |4:           \<na |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           \<
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: <n |3:           \< |4:           \<n |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           \
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: \< |3:           \ |4:           \< |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2:  \ |3:            |4:           \ |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2:            |3:            |4:            |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	[string ":lua"]:1: in main chunk
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:          
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 9
󰘫  |1: delta |2:           |3:           |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 6
󰘫  |1: delta |2:        |3:        |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       h
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 7
󰘫  |1: delta |2:  h |3:       h |4:        |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       he
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 8
󰘫  |1: delta |2: he |3:       he |4:       h |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       hea
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 9
󰘫  |1: delta |2: ea |3:       hea |4:       he |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       head
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2: ad |3:       head |4:       hea |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       heade
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: de |3:       heade |4:       head |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       header
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: er |3:       header |4:       heade |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       <header>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2: er> |3:       <header> |4:       header |5: {}

󰘫  |1: mode:    |2: niI
󰘫  |1: mode:  niI  |2: niI
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 6
󰘫  |1: delta |2:        |3:        |4:  |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 6
󰘫  |1: delta |2:        |3:        |4:        |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:      
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 5
󰘫  |1: delta |2:    |3:       |4:        |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:      
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 5
󰘫  |1: delta |2:       |3:       |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 4
󰘫  |1: delta |2:      |3:      |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: </main>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 7
󰘫  |1: delta |2: ain> |3: </main> |4:      |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: </main>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 7
󰘫  |1: delta |2: </main> |3: </main> |4: </main> |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 6
󰘫  |1: delta |2:        |3:        |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 6
󰘫  |1: delta |2:        |3:        |4:        |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  always_trigger = false,
  bind = true,
  bufnr = 0,
  check_completion_visible = true,
  close_timeout = 4000,
  cursorhold_update = true,
  debug = true,
  doc_lines = 5,
  extra_trigger_chars = {},
  fix_pos = true,
  floating_window = true,
  floating_window_above_cur_line = false,
  floating_window_off_x = 1,
  floating_window_off_y = <function 1>,
  handler_opts = {
    border = "rounded"
  },
  hi_parameter = "MoreMsg",
  hint_enable = true,
  hint_inline = <function 2>,
  hint_prefix = "  ",
  hint_scheme = "Comment",
  log_path = "debug_log_file_path",
  mainwin = 0,
  max_height = 50,
  max_width = 200,
  padding = "",
  shadow_blend = 36,
  shadow_guibg = "Black",
  timer_interval = 100,
  use_lspsaga = false,
  verbose = false,
  wrap = true,
  zindex = 200
}

󰘫  |1: {
  always_trigger = false,
  bind = true,
  bufnr = 0,
  check_completion_visible = true,
  close_timeout = 4000,
  cursorhold_update = true,
  debug = true,
  doc_lines = 5,
  extra_trigger_chars = {},
  fix_pos = true,
  floating_window = true,
  floating_window_above_cur_line = false,
  floating_window_off_x = 1,
  floating_window_off_y = <function 1>,
  handler_opts = {
    border = "rounded"
  },
  hi_parameter = "MoreMsg",
  hint_enable = true,
  hint_inline = <function 2>,
  hint_prefix = "  ",
  hint_scheme = "Comment",
  log_path = "debug_log_file_path",
  mainwin = 0,
  max_height = 50,
  max_width = 200,
  padding = "",
  shadow_blend = 36,
  shadow_guibg = "Black",
  timer_interval = 100,
  use_lspsaga = false,
  verbose = false,
  wrap = true,
  zindex = 200
}

󰘫  |1: hover not supported
󰘫  |1: lsp cap:  |2: false |3: false
󰘫  |1: skip: signature capabilities not enabled
󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: {
  always_trigger = false,
  bind = true,
  bufnr = 0,
  check_completion_visible = true,
  close_timeout = 4000,
  cursorhold_update = true,
  debug = true,
  doc_lines = 5,
  extra_trigger_chars = {},
  fix_pos = true,
  floating_window = true,
  floating_window_above_cur_line = false,
  floating_window_off_x = 1,
  floating_window_off_y = <function 1>,
  handler_opts = {
    border = "rounded"
  },
  hi_parameter = "MoreMsg",
  hint_enable = true,
  hint_inline = <function 2>,
  hint_prefix = "  ",
  hint_scheme = "Comment",
  log_path = "debug_log_file_path",
  mainwin = 0,
  max_height = 50,
  max_width = 200,
  padding = "",
  shadow_blend = 36,
  shadow_guibg = "Black",
  timer_interval = 100,
  use_lspsaga = false,
  verbose = false,
  wrap = true,
  zindex = 200
}

󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: hover not supported
󰘫  |1: lsp cap:  |2: false |3: false
󰘫  |1: skip: signature capabilities not enabled
󰘫  |1: hover not supported
󰘫  |1: lsp cap:  |2: false |3: false
󰘫  |1: skip: signature capabilities not enabled
󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: changed
󰘫  |1: hover not supported
󰘫  |1: lsp cap:  |2: false |3: false
󰘫  |1: skip: signature capabilities not enabled
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: hover not supported
󰘫  |1: lsp cap:  |2: false |3: false
󰘫  |1: skip: signature capabilities not enabled
󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:       
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 6
󰘫  |1: delta |2:        |3:        |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 4
󰘫  |1: delta |2:      |3:      |4:  |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 4
󰘫  |1: delta |2:      |3:      |4:      |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	[string ":lua"]:1: in main chunk
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: 
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 0
󰘫  |1: delta |2:  |3:  |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: 
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 0
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: {
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 1
󰘫  |1: delta |2: { |3: { |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: {%
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 2
󰘫  |1: delta |2: {% |3: {% |4: { |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: {%%
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 3
󰘫  |1: delta |2: %% |3: {%% |4: {% |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: {% 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 3
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: {% l
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 4
󰘫  |1: delta |2:  l |3: {% l |4: {%  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: {% lo
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 5
󰘫  |1: delta |2: lo |3: {% lo |4: {% l |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: {% loa
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 6
󰘫  |1: delta |2: oa |3: {% loa |4: {% lo |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: {% load
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 7
󰘫  |1: delta |2: ad |3: {% load |4: {% loa |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: {% load 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 8
󰘫  |1: delta |2: d  |3: {% load  |4: {% load |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: {% load s
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 9
󰘫  |1: delta |2:  s |3: {% load s |4: {% load  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: {% load st
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 10
󰘫  |1: delta |2: st |3: {% load st |4: {% load s |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: {% load sta
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2: ta |3: {% load sta |4: {% load st |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: {% load stat
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: at |3: {% load stat |4: {% load sta |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: {% load static
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2: tic |3: {% load static |4: {% load stat |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: {% load static 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: c  |3: {% load static  |4: {% load static |5: {}

󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 4
󰘫  |1: delta |2:      |3:      |4:  |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 4
󰘫  |1: delta |2:      |3:      |4:      |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     
󰘫  |1: newline, lets try signature based on setup
󰘫  |1: lsp cap:  |2: true |3: false |4: 4
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     l
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 5
󰘫  |1: delta |2:  l |3:     l |4:      |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     lik
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 7
󰘫  |1: delta |2: lik |3:     lik |4:     l |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     li
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 6
󰘫  |1: delta |2: ik |3:     li |4:     lik |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     lin
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 7
󰘫  |1: delta |2: in |3:     lin |4:     li |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     link
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 8
󰘫  |1: delta |2: nk |3:     link |4:     lin |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" href="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 33
󰘫  |1: delta |2: nk rel="stylesheet" href=" |3:     <link rel="stylesheet" href=" |4:     link |5: {}

󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" href="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 33
󰘫  |1: delta |2:     <link rel="stylesheet" href=" |3:     <link rel="stylesheet" href=" |4:     <link rel="stylesheet" href=" |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: i
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" t
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2: href=" |3:     <link rel="stylesheet" t |4:     <link rel="stylesheet" href=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" ty
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 29
󰘫  |1: delta |2: ty |3:     <link rel="stylesheet" ty |4:     <link rel="stylesheet" t |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" typ
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: delta |2: yp |3:     <link rel="stylesheet" typ |4:     <link rel="stylesheet" ty |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2: pe |3:     <link rel="stylesheet" type |4:     <link rel="stylesheet" typ |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type=
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2: e= |3:     <link rel="stylesheet" type= |4:     <link rel="stylesheet" type |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 33
󰘫  |1: delta |2: =" |3:     <link rel="stylesheet" type=" |4:     <link rel="stylesheet" type= |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="t
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 34
󰘫  |1: delta |2: "t |3:     <link rel="stylesheet" type="t |4:     <link rel="stylesheet" type=" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="te
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 35
󰘫  |1: delta |2: te |3:     <link rel="stylesheet" type="te |4:     <link rel="stylesheet" type="t |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="tex
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 36
󰘫  |1: delta |2: ex |3:     <link rel="stylesheet" type="tex |4:     <link rel="stylesheet" type="te |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 37
󰘫  |1: delta |2: xt |3:     <link rel="stylesheet" type="text |4:     <link rel="stylesheet" type="tex |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 38
󰘫  |1: delta |2: t/ |3:     <link rel="stylesheet" type="text/ |4:     <link rel="stylesheet" type="text |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 39
󰘫  |1: delta |2: /c |3:     <link rel="stylesheet" type="text/c |4:     <link rel="stylesheet" type="text/ |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/cs
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 40
󰘫  |1: delta |2: cs |3:     <link rel="stylesheet" type="text/cs |4:     <link rel="stylesheet" type="text/c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 41
󰘫  |1: delta |2: ss |3:     <link rel="stylesheet" type="text/css |4:     <link rel="stylesheet" type="text/cs |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css"
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 42
󰘫  |1: delta |2: s" |3:     <link rel="stylesheet" type="text/css" |4:     <link rel="stylesheet" type="text/css |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 43
󰘫  |1: delta |2: "  |3:     <link rel="stylesheet" type="text/css"  |4:     <link rel="stylesheet" type="text/css" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 50
󰘫  |1: delta |2:  href="{ |3:     <link rel="stylesheet" type="text/css" href="{ |4:     <link rel="stylesheet" type="text/css"  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{%
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 51
󰘫  |1: delta |2: {% |3:     <link rel="stylesheet" type="text/css" href="{% |4:     <link rel="stylesheet" type="text/css" href="{ |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{%%
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 52
󰘫  |1: delta |2: %% |3:     <link rel="stylesheet" type="text/css" href="{%% |4:     <link rel="stylesheet" type="text/css" href="{% |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 52
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% s
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 53
󰘫  |1: delta |2:  s |3:     <link rel="stylesheet" type="text/css" href="{% s |4:     <link rel="stylesheet" type="text/css" href="{%  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% st
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 54
󰘫  |1: delta |2: st |3:     <link rel="stylesheet" type="text/css" href="{% st |4:     <link rel="stylesheet" type="text/css" href="{% s |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% sta
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 55
󰘫  |1: delta |2: ta |3:     <link rel="stylesheet" type="text/css" href="{% sta |4:     <link rel="stylesheet" type="text/css" href="{% st |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% stat
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 56
󰘫  |1: delta |2: at |3:     <link rel="stylesheet" type="text/css" href="{% stat |4:     <link rel="stylesheet" type="text/css" href="{% sta |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 5
󰘫  |1: delta |2: <link rel="stylesheet" type="text/css" href="{% stat |3:     < |4:     <link rel="stylesheet" type="text/css" href="{% stat |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% static 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 59
󰘫  |1: delta |2: <link rel="stylesheet" type="text/css" href="{% static  |3:     <link rel="stylesheet" type="text/css" href="{% static  |4:     < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% static '
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 60
󰘫  |1: delta |2:  ' |3:     <link rel="stylesheet" type="text/css" href="{% static ' |4:     <link rel="stylesheet" type="text/css" href="{% static  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% static ''
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 61
󰘫  |1: delta |2: '' |3:     <link rel="stylesheet" type="text/css" href="{% static '' |4:     <link rel="stylesheet" type="text/css" href="{% static ' |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% static 'b
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 61
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% static 'bl
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 62
󰘫  |1: delta |2: bl |3:     <link rel="stylesheet" type="text/css" href="{% static 'bl |4:     <link rel="stylesheet" type="text/css" href="{% static 'b |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% static 'blo
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 63
󰘫  |1: delta |2: lo |3:     <link rel="stylesheet" type="text/css" href="{% static 'blo |4:     <link rel="stylesheet" type="text/css" href="{% static 'bl |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% static 'blog
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 64
󰘫  |1: delta |2: og |3:     <link rel="stylesheet" type="text/css" href="{% static 'blog |4:     <link rel="stylesheet" type="text/css" href="{% static 'blo |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% static 'blog/
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 65
󰘫  |1: delta |2: g/ |3:     <link rel="stylesheet" type="text/css" href="{% static 'blog/ |4:     <link rel="stylesheet" type="text/css" href="{% static 'blog |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% static 'blog/m
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 66
󰘫  |1: delta |2: /m |3:     <link rel="stylesheet" type="text/css" href="{% static 'blog/m |4:     <link rel="stylesheet" type="text/css" href="{% static 'blog/ |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% static 'blog/ma
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 67
󰘫  |1: delta |2: ma |3:     <link rel="stylesheet" type="text/css" href="{% static 'blog/ma |4:     <link rel="stylesheet" type="text/css" href="{% static 'blog/m |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 5
󰘫  |1: delta |2: <link rel="stylesheet" type="text/css" href="{% static 'blog/ma |3:     < |4:     <link rel="stylesheet" type="text/css" href="{% static 'blog/ma |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 5
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 70
󰘫  |1: delta |2: <link rel="stylesheet" type="text/css" href="{% static 'blog/main. |3:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main. |4:     < |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.c
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 71
󰘫  |1: delta |2: .c |3:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.c |4:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main. |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.cs
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 72
󰘫  |1: delta |2: cs |3:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.cs |4:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.c |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.css
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 73
󰘫  |1: delta |2: ss |3:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.css |4:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.cs |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.css' 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 75
󰘫  |1: delta |2: s'  |3:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.css'  |4:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.css |5: {}

󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.css'
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 74
󰘫  |1: delta |2:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.css' |3:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.css' |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.css'
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 74
󰘫  |1: delta |2:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.css' |3:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.css' |4:     <link rel="stylesheet" type="text/css" href="{% static 'blog/main.css' |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="container"
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2:         <div> class="container" |3:         <div> class="container" |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div> class="container">
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 32
󰘫  |1: delta |2: "> |3:         <div> class="container"> |4:         <div> class="container" |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <div
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 12
󰘫  |1: delta |2: v> class="container"> |3:         <div |4:         <div> class="container"> |5: {}

󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:         <di
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 11
󰘫  |1: delta |2:         <di |3:         <di |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span>
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 16
󰘫  |1: delta |2:           <span> |3:           <span> |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <span
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 15
󰘫  |1: delta |2: n> |3:           <span |4:           <span> |5: {}

󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:           <spa
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 14
󰘫  |1: delta |2:           <spa |3:           <spa |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2: <body
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 5
󰘫  |1: delta |2:       <spa |3: <body |4:           <spa |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: insert enter
󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:      <title>Django Blog - About
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 31
󰘫  |1: delta |2:      <title>Django Blog - About |3:      <title>Django Blog - About |4:  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:      <title>Django Blog - Abou
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 30
󰘫  |1: delta |2: ut |3:      <title>Django Blog - Abou |4:      <title>Django Blog - About |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:      <title>Django Blog - Abo
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 29
󰘫  |1: delta |2: ou |3:      <title>Django Blog - Abo |4:      <title>Django Blog - Abou |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:      <title>Django Blog - Ab
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 28
󰘫  |1: delta |2: bo |3:      <title>Django Blog - Ab |4:      <title>Django Blog - Abo |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:      <title>Django Blog - A
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 27
󰘫  |1: delta |2: Ab |3:      <title>Django Blog - A |4:      <title>Django Blog - Ab |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:      <title>Django Blog - 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 26
󰘫  |1: delta |2:  A |3:      <title>Django Blog -  |4:      <title>Django Blog - A |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:      <title>Django Blog -
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 25
󰘫  |1: delta |2: -  |3:      <title>Django Blog - |4:      <title>Django Blog -  |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:      <title>Django Blog 
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 24
󰘫  |1: delta |2:  - |3:      <title>Django Blog  |4:      <title>Django Blog - |5: {}

󰘫  |1: changed
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:      <title>Django Blog
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 23
󰘫  |1: delta |2: g  |3:      <title>Django Blog |4:      <title>Django Blog  |5: {}

󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:837: in function ''
	vim/_editor.lua: in function <vim/_editor.lua:0>
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:      <title>Django Blo
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 22
󰘫  |1: delta |2:      <title>Django Blo |3:      <title>Django Blo |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 22
󰘫  |1: delta |2:               <a class |3:               <a class |4:      <title>Django Blo |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: Insert leave cleanup
󰘫  |1: stack traceback:
	...er/start/lsp_signature.nvim/lua/lsp_signature/helper.lua:341: in function 'cleanup_async'
	...cker/start/lsp_signature.nvim/lua/lsp_signature/init.lua:813: in function 'on_InsertLeave'
	[string ":lua"]:1: in main chunk
󰘫  |1: async cleanup:  |2: n
󰘫  |1: cleanup vt |2: 14
󰘫  |1: {
  triggerCharacters = { "(" }
}
 |2:               <a class
󰘫  |1: ( |2: true
󰘫  |1: (
󰘫  |1: [%(][^%(%)]*$ |2: %( |3: ^%(%)
󰘫  |1: lsp cap:  |2: true |3: false |4: 22
󰘫  |1: delta |2:               <a class |3:               <a class |4:  |5: {
  trigger = "CursorHold"
}

󰘫  |1: Insert leave cleanup |2: n
󰘫  |1: signature handler
󰘫  |1: no valid signatures
󰘫  |1: mode:    |2: n
󰘫  |1: close timer
